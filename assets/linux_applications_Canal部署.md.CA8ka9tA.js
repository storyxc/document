import{_ as i,c as a,o as n,a2 as l}from"./chunks/framework.CQECOx-R.js";const g=JSON.parse('{"title":"canal部署","description":"","frontmatter":{},"headers":[],"relativePath":"linux/applications/Canal部署.md","filePath":"linux/applications/Canal部署.md","lastUpdated":1746516944000}'),p={name:"linux/applications/Canal部署.md"};function h(t,s,k,e,E,r){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="canal部署" tabindex="-1">canal部署 <a class="header-anchor" href="#canal部署" aria-label="Permalink to &quot;canal部署&quot;">​</a></h1><p>canal官方仓库:<code>https://github.com/alibaba/canal/</code></p><p>wiki:<code>https://github.com/alibaba/canal/wiki</code></p><p>canal的用途是基于mysql的binlog日志解析，提供增量数据的订阅和消费。简单的场景：通过canal监控mysql数据变更从而及时更新redis中对应的缓存或更新es中的文档内容</p><p>本文主要介绍canal在服务器端的部署，包括<code>canal-admin</code>,<code>canal-tsdb配置</code>以及<code>instance</code>配置。mysql版本为5.7，系统为macOS14.2.1。</p><p>首先需要下载canal的发行版，下载地址：<code>https://github.com/alibaba/canal/releases</code>，可自行选择版本，这里选择1.1.4。</p><h2 id="mysql" tabindex="-1">mysql <a class="header-anchor" href="#mysql" aria-label="Permalink to &quot;mysql&quot;">​</a></h2><p>自建MySQL,需要先开启 Binlog 写入功能，配置 binlog-format 为 ROW 模式，my.cnf 中配置如下</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[mysqld]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log-bin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=mysql-bin </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 开启 binlog</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">binlog-format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=ROW </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 选择 ROW 模式</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=1 </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置 MySQL replaction 需要定义，不要和 canal 的 slaveId 重复</span></span></code></pre></div><h2 id="canal-admin" tabindex="-1">canal admin <a class="header-anchor" href="#canal-admin" aria-label="Permalink to &quot;canal admin&quot;">​</a></h2><ul><li>解压</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Downloads/canal/admin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> canal.admin-1.1.4.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Downloads/canal/admin</span></span></code></pre></div><ul><li><p>执行conf文件夹中的canal_manager.sql建表</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mysql</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -uroot</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Downloads/canal/admin/conf/canal_manager.sql</span></span></code></pre></div></li></ul><p><img src="https://storyxc.com/images/blog//image-20210617000438523.png" alt="image-20210617000438523"></p><ul><li><p>创建<code>canal</code>用户并授权<code>canal</code>链接 MySQL 账号具有作为 MySQL slave 的权限</p><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> canal</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IDENTIFIED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;canal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, REPLICATION SLAVE, REPLICATION CLIENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;canal&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">-- GRANT ALL PRIVILEGES ON *.* TO &#39;canal&#39;@&#39;%&#39; ;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">FLUSH PRIVILEGES;</span></span></code></pre></div></li></ul><p>修改conf文件夹中的application.yml</p><p><img src="https://storyxc.com/images/blog/b0c9b225-f1ee-4bec-b2b2-fe32122ff354.png" alt="image-20231223000510198"></p><ul><li><p>执行admin/bin目录的startup.sh</p></li><li><p>访问8089端口</p><p><img src="https://storyxc.com/images/blog//image-20210617001200010.png" alt="image-20210617001200010"></p></li><li><p>使用默认账号密码 admin/123456即可登录</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>application.yml</code>中的canal.adminUser和canal.adminPasswd并非WebUI的登录用户名和密码，而是和canal-server交互用的</p></div><p><img src="https://storyxc.com/images/blog//image-20210617001457272.png" alt="image-20210617001457272"></p></li></ul><blockquote><blockquote><p>canal-admin的核心模型主要有：</p></blockquote><ol><li>instance，对应canal-server里的instance，一个最小的订阅mysql的队列</li><li>server，对应canal-server，一个server里可以包含多个instance</li><li>集群，对应一组canal-server，组合在一起面向高可用HA的运维</li></ol><p>简单解释：</p><ol><li>instance是最原始的业务订阅诉求，它会和 server/集群 这两个面向资源服务属性的进行关联，比如instance A绑定到server A上或者集群 A上，</li><li>有了任务和资源的绑定关系后，对应的资源服务就会接收到这个任务配置，在对应的资源上动态加载instance，并提供服务</li></ol></blockquote><ul><li>动态加载的过程，对应配置文件中的autoScan配置，只不过基于canal-admin之后可就以变为远程的web操作，而不需要在机器上运维配置文件</li></ul><blockquote><ol start="3"><li>将server抽象成资源之后，原本canal-server运行所需要的canal.properties/instance.properties配置文件就需要在web ui上进行统一运维，每个server只需要以最基本的启动配置 (比如知道一下canal-admin的manager地址，以及访问配置的账号、密码即可)</li></ol></blockquote><ul><li><p>新建server，按照图中配置即可</p><p><img src="https://storyxc.com/images/blog/04729a10-70fe-440a-ba4f-f28238ca3295.png" alt="image-20231223001200351"></p><blockquote><p>配置项：</p><ul><li>所属集群，可以选择为单机 或者 集群。一般单机Server的模式主要用于一次性的任务或者测试任务</li><li>Server名称，唯一即可，方便自己记忆</li><li>Server Ip，机器ip</li><li>admin端口，canal 1.1.4版本新增的能力，会在canal-server上提供远程管理操作，默认值11110</li><li>tcp端口，canal提供netty数据订阅服务的端口</li><li>metric端口， promethues的exporter监控数据端口 (未来会对接监控)</li></ul></blockquote></li></ul><h3 id="server端配置" tabindex="-1">server端配置 <a class="header-anchor" href="#server端配置" aria-label="Permalink to &quot;server端配置&quot;">​</a></h3><ul><li>修改为kafka模式并配置kafka相关参数</li><li>tsdb改为mysql</li></ul><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">######### 		common argument		#############</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcp bind ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># register ip to zookeeper</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.register.ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 11111</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.metrics.pull.port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 11112</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># canal instance user/passwd</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = canal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.passwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = E3619321C1A937C46A0D8BD1DAC39F93B27D4458</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># canal admin config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.admin.manager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1:8089</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.admin.port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 11110</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.admin.user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.admin.passwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 4ACFE3202A5FF5CF467898FC58AAB1D615029441</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.zkServers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># flush data to zk</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.zookeeper.flush.period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.withoutNetty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># tcp, kafka, RocketMQ</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.serverMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = kafka</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># flush meta cursor/parse position to file</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.file.data.dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = \${canal.conf.dir}</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.file.flush.period</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## memory store RingBuffer size, should be Math.pow(2,n)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.memory.buffer.size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 16384</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## memory store RingBuffer used memory unit size , default 1kb</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.memory.buffer.memunit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1024 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## meory store gets mode used MEMSIZE or ITEMSIZE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.memory.batch.mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = MEMSIZE</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.memory.rawEntry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## detecing config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.detecting.enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.detecting.sql = insert into retl.xdual values(1,now()) on duplicate key update x=now()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.detecting.sql</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = select 1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.detecting.interval.time</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.detecting.retry.threshold</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 3</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.detecting.heartbeatHaEnable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># support maximum transaction size, more than the size of the transaction will be cut into multiple transactions delivery</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.transaction.size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =  1024</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># mysql fallback connected to new master should fallback times</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.fallbackIntervalInSeconds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 60</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># network config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.network.receiveBufferSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 16384</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.network.sendBufferSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 16384</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.network.soTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 30</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># binlog filter config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.druid.ddl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.query.dcl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.query.dml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.query.ddl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.table.error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.rows</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.filter.transaction.entry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># binlog format/image check</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.binlog.format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = ROW,STATEMENT,MIXED </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.binlog.image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = FULL,MINIMAL,NOBLOB</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># binlog ddl isolation</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.get.ddl.isolation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># parallel parser config</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.parser.parallel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## concurrent thread number, default 60% available processors, suggest not to exceed Runtime.getRuntime().availableProcessors()</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.parser.parallelThreadSize = 16</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">## disruptor ringbuffer size, must be power of 2</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.parser.parallelBufferSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 256</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># table meta tsdb info</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.tsdb.enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.tsdb.dir = \${canal.file.data.dir:../conf}/\${canal.instance.destination:}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.tsdb.url = jdbc:h2:\${canal.instance.tsdb.dir}/h2;CACHE_SIZE=1000;MODE=MYSQL;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.tsdb.dbUsername</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = canal</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.tsdb.dbPassword</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = canal</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dump snapshot interval, default 24 hour</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.tsdb.snapshot.interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 24</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># purge snapshot expire , default 360 hour(15 days)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.tsdb.snapshot.expire</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 360</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># aliyun ak/sk , support rds/mq</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.aliyun.accessKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.aliyun.secretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">######### 		destinations		#############</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#################################################</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.destinations</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># conf root dir</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.conf.dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = ../conf</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># auto scan instance dir add/remove and start/stop instance</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.auto.scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.auto.scan.interval</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.tsdb.spring.xml = classpath:spring/tsdb/h2-tsdb.xml</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.tsdb.spring.xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = classpath:spring/tsdb/mysql-tsdb.xml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.global.mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = manager</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.global.lazy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.global.manager.address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = \${canal.admin.manager}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.global.spring.xml = classpath:spring/memory-instance.xml</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.instance.global.spring.xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = classpath:spring/file-instance.xml</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.instance.global.spring.xml = classpath:spring/default-instance.xml</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">##################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">######### 		     MQ 		     #############</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">##################################################</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.servers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1:9092 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.retries</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 0</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.batchSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 16384</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.maxRequestSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1048576</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.lingerMs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.bufferMemory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 33554432</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.canalBatchSize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 50</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.canalGetTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 100</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.flatMessage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.compressionType</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = none</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.acks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = all</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.mq.properties. =</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.producerGroup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = canal-test</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Set this value to &quot;cloud&quot;, if you want open message trace feature in aliyun.</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.accessChannel</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = local</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># aliyun mq namespace</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#canal.mq.namespace =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">##################################################</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#########     Kafka Kerberos Info    #############</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">##################################################</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.kafka.kerberos.enable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = false</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.kafka.kerberos.krb5FilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../conf/kerberos/krb5.conf&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.mq.kafka.kerberos.jaasFilePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;../conf/kerberos/jaas.conf&quot;</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>canal.auto.scan</code>如果设置为true,<code>canal.destinations</code>可以不填写，server会自动扫描instance然后启动</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CanalController</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化monitor机制</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">autoScan </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> BooleanUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toBoolean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(properties, CanalConstants.CANAL_AUTO_SCAN));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (autoScan) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    defaultAction </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> InstanceAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">destination</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            InstanceConfig config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instanceConfigs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">==</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // 重新读取一下instance config</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> parseInstanceConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(properties, destination);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                instanceConfigs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination, config);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">embededCanalServer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // HA机制启动</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                ServerRunningMonitor runningMonitor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ServerRunningMonitors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRunningMonitor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLazy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">runningMonitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    runningMonitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;auto notify start {} successful.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, destination);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        //...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">instanceConfigMonitors </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MigrateMap.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">makeComputingMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Function&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InstanceMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InstanceConfigMonitor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> InstanceConfigMonitor </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(InstanceMode </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        int</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> scanInterval </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Integer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(properties,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            CanalConstants.CANAL_AUTO_SCAN_INTERVAL,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            &quot;5&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (mode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isSpring</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            SpringInstanceConfigMonitor monitor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> SpringInstanceConfigMonitor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setScanIntervalInSecond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scanInterval);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDefaultAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(defaultAction);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 设置conf目录，默认是user.dir + conf目录组成</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            String rootDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(properties, CanalConstants.CANAL_CONF_DIR);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootDir)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                rootDir </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;../conf&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">equals</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;otter-canal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, System.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;appName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRootConf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(rootDir);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // eclipse debug模式</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setRootConf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/main/resources/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> monitor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (mode.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isManager</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ManagerInstanceConfigMonitor monitor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ManagerInstanceConfigMonitor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setScanIntervalInSecond</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(scanInterval);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setDefaultAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(defaultAction);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            String managerAddress </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(properties, CanalConstants.CANAL_ADMIN_MANAGER);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setConfigClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getManagerClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(managerAddress));</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> monitor;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            throw</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> UnsupportedOperationException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;unknow mode :&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> mode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot; for monitor&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CanalController.start()</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() throws Throwable {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // ...</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 尝试启动一下非lazy状态的通道</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Map.Entry&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">InstanceConfig</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; entry </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instanceConfigs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">entrySet</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String destination </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        InstanceConfig config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> entry.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getValue</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // 创建destination的工作节点</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">embededCanalServer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // HA机制启动</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ServerRunningMonitor runningMonitor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ServerRunningMonitors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getRunningMonitor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLazy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">runningMonitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                runningMonitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (autoScan) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            instanceConfigMonitors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">register</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(destination, defaultAction);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (autoScan) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        instanceConfigMonitors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(globalInstanceConfig.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (InstanceConfigMonitor monitor </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instanceConfigMonitors.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">values</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                monitor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">		// ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 然后会调用ManagerInstanceConfigMonitor的start方法，start方法会启动一个定时任务，每隔scanInterval秒调用scan方法</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    executor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">scheduleWithFixedDelay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Runnable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isFirst) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                    isFirst </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (Throwable </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;scan failed&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, scanIntervalInSecond, TimeUnit.SECONDS);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// scan方法中会通过configClient调用canal-admin的接口获取instance的配置信息，</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 最后对instance进行stop/reload/start操作</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> scan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    String instances </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> configClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findInstances</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; is </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lists.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">split</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instances, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;,&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; start </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lists.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; stop </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lists.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; restart </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Lists.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">newArrayList</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (String instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> is) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">configs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">containsKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            PlainCanal newPlainCanal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> configClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (newPlainCanal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                configs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance, newPlainCanal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                start.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">else</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            PlainCanal plainCanal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> configs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            PlainCanal newPlainCanal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> configClient.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">findInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance, plainCanal.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getMd5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (newPlainCanal </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">                // 配置有变化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                restart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                configs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance, newPlainCanal);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    configs.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((instance, plainCanal) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">contains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            stop.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">add</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    stop.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        notifyStop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    restart.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        notifyReload</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    start.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        notifyStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(instance);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><h2 id="canal-deployer" tabindex="-1">canal deployer <a class="header-anchor" href="#canal-deployer" aria-label="Permalink to &quot;canal deployer&quot;">​</a></h2><ul><li>解压</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mkdir</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Downloads/canal/deployer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -zxvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> canal.deployer-1.1.4.tar.gz</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -C</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/Downloads/canal/deployer</span></span></code></pre></div><ul><li><p>用conf目录下的canal_local.properties替换canal.properties</p></li><li><p>修改配置</p><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># canal.ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># register ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">canal.register.ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><ol><li><p>注意ip前后不能有空格，不然会无法启动netty server从而无法启动canal server，应该是后台没做trim</p></li><li><p>如果不填写<code>canal.ip</code>和<code>canal.register.ip</code>两个配置项，代码中将通过<code>AddressUtils.getHostIp()</code>获取本机的ip地址，如果本地有docker/orbstack等创建的虚拟网络设备会导致启动canal-server后识别到多个server且是不同的ip（docker0网桥或orbstack容器等的ip),比较膈应人。(<a href="https://github.com/alibaba/canal/issues/47" target="_blank" rel="noreferrer">#issue47</a>)</p></li></ol><p>源码：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// CanalController.java</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ip) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(registerIp)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> registerIp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AddressUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHostIp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ip)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ip </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AddressUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHostIp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StringUtils.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isEmpty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(registerIp)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    registerIp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ip; </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 兼容以前配置</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div></li><li><p>执行bin目录下的startup.sh</p></li><li><p>直接在canal admin的webUI界面中配置instance，等待启动即可,如有问题查看<code>deploy/logs/story/story.log</code></p><blockquote><p>具体配置项参见<a href="https://github.com/alibaba/canal/wiki/AdminGuide#properties%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6" target="_blank" rel="noreferrer">wiki</a></p></blockquote><p><img src="https://storyxc.com/images/blog/9e206011-7434-4313-a178-598aed41cc97.png" alt="image-20231223002954201"></p></li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>如果在server的配置文件中填了相同的配置项，那么instance中的配置会被server中的覆盖，例如<code>canal.instance.tsdb.url</code>配置(<a href="https://github.com/alibaba/canal/issues/4669" target="_blank" rel="noreferrer">#issue4669</a>)</p></div><h2 id="验证" tabindex="-1">验证 <a class="header-anchor" href="#验证" aria-label="Permalink to &quot;验证&quot;">​</a></h2><p>此时我们的实例<code>story</code>已经开始监听<code>story</code>数据库下面的操作，如果有变更，就会推送至kafka的<code>canal-story</code>这个topic中</p><p><img src="https://storyxc.com/images/blog/3085e72e-0399-4e84-b019-bc14cbe0f4ae.png" alt="image-20231223004300829"></p><p>之后就需要通过业务端根据情况监听队列中的数据变化，做相应的操作。</p>`,35)]))}const c=i(p,[["render",h]]);export{g as __pageData,c as default};
