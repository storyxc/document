import{_ as a,c as i,o as n,a2 as l}from"./chunks/framework.CQECOx-R.js";const o=JSON.parse('{"title":"macvlan","description":"","frontmatter":{},"headers":[],"relativePath":"docker/docker网络之macvlan.md","filePath":"docker/docker网络之macvlan.md","lastUpdated":1746516944000}'),e={name:"docker/docker网络之macvlan.md"};function h(p,s,t,k,d,r){return n(),i("div",null,s[0]||(s[0]=[l(`<h1 id="macvlan" tabindex="-1">macvlan <a class="header-anchor" href="#macvlan" aria-label="Permalink to &quot;macvlan&quot;">​</a></h1><p>在日常使用docker的时候，可以通过设置端口映射的方式，实现通过宿主机ip访问docker容器的目的。当然，也有办法可以实现给docker镜像设置单独的IP。这里就要用到<code>macvlan</code>技术。</p><p>macvlan 是 Linux kernel 支持的新特性，<code>macvlan</code>能将一块物理网卡虚拟成多块虚拟网卡，docker这种容器就可以通过虚拟网卡获取IP，利用IP进行独立上网，真正做到跟物理机完全一样的体验。</p><h2 id="docker网络中的macvlan" tabindex="-1">docker网络中的macvlan <a class="header-anchor" href="#docker网络中的macvlan" aria-label="Permalink to &quot;docker网络中的macvlan&quot;">​</a></h2><p><code>docker中的macvlan</code> 是 Docker中的一种网络驱动，它允许容器直接使用物理网络接口的 MAC 地址。这使得容器可以像物理设备一样存在于网络中，而不需要进行端口映射或NAT。</p><h2 id="linux中开启macvlan" tabindex="-1">linux中开启macvlan <a class="header-anchor" href="#linux中开启macvlan" aria-label="Permalink to &quot;linux中开启macvlan&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 加载</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macvlan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 模块</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modprobe</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macvlan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 查看是否已加载</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsmod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macvlan</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 如果有有输出证明已经加载macvlan模块，否则说明不支持</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">//</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macvlan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   24576</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span></span></code></pre></div><h2 id="docker创建macvlan网络" tabindex="-1">docker创建macvlan网络 <a class="header-anchor" href="#docker创建macvlan网络" aria-label="Permalink to &quot;docker创建macvlan网络&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> network</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> macvlan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --subnet=192.168.2.0/24</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --gateway=192.168.2.1</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parent=enp3s0</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  vlan</span></span></code></pre></div><ul><li><code>subnet</code>：与物理网络相同的子网。</li><li><code>gateway</code>：与物理网络相同的网关。</li><li><code>-o parent</code>：宿主机上的物理网络接口，如 eth0。</li></ul><h2 id="创建容器并连接到macvlan" tabindex="-1">创建容器并连接到macvlan <a class="header-anchor" href="#创建容器并连接到macvlan" aria-label="Permalink to &quot;创建容器并连接到macvlan&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 容器名</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --net</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vlan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ip=指定的IP地址</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 镜像名</span></span></code></pre></div><p>例如</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> busybox</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --net</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vlan</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --ip=192.168.2.166</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> busybox</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/sh</span></span></code></pre></div><h2 id="docker-compose配置macvlan" tabindex="-1">docker-compose配置macvlan <a class="header-anchor" href="#docker-compose配置macvlan" aria-label="Permalink to &quot;docker-compose配置macvlan&quot;">​</a></h2><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;3&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  busybox</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      vlan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        ipv4_address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">192.168.2.166</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">networks</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  vlan</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    external</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div><p>容器启动后就可以通过指定的固定ip来访问docker容器中的服务了</p>`,17)]))}const F=a(e,[["render",h]]);export{o as __pageData,F as default};
