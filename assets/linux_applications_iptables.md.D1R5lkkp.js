import{_ as a,c as l,o as s,a2 as t}from"./chunks/framework.CQECOx-R.js";const c=JSON.parse('{"title":"iptables","description":"","frontmatter":{},"headers":[],"relativePath":"linux/applications/iptables.md","filePath":"linux/applications/iptables.md","lastUpdated":1746516944000}'),e={name:"linux/applications/iptables.md"};function p(r,i,h,n,o,d){return s(),l("div",null,i[0]||(i[0]=[t(`<h1 id="iptables" tabindex="-1">iptables <a class="header-anchor" href="#iptables" aria-label="Permalink to &quot;iptables&quot;">​</a></h1><p>iptables是一个用户级程序，用于操作内核级的网络模块<code>netfilter</code></p><h2 id="表和链" tabindex="-1">表和链 <a class="header-anchor" href="#表和链" aria-label="Permalink to &quot;表和链&quot;">​</a></h2><p>iptables的功能由表的形式呈现，每张表由若干个链组成，每个链可以分配一组规则</p><p>iptables有五张内建表，按照优先级高到底分别是：Raw、Mangle、NAT、Filter、Security</p><h3 id="raw" tabindex="-1">Raw <a class="header-anchor" href="#raw" aria-label="Permalink to &quot;Raw&quot;">​</a></h3><p>此表负责数据包标记，决定数据包是否被状态跟踪机制处理，Raw表有2个内建链</p><ul><li>PREROUTING：用于通过任何网络接口到达的数据包</li><li>OUTPUT：针对本地进程产生的数据包</li></ul><h3 id="mangle" tabindex="-1">Mangle <a class="header-anchor" href="#mangle" aria-label="Permalink to &quot;Mangle&quot;">​</a></h3><p>此表负责更改数据包内容,Mangle表有5个内建链</p><ul><li>PREROUTING</li><li>OUTPUT</li><li>FORWARD</li><li>INPUT</li><li>POSTROUTING</li></ul><h3 id="nat" tabindex="-1">NAT <a class="header-anchor" href="#nat" aria-label="Permalink to &quot;NAT&quot;">​</a></h3><p>此表负责数据包的ip地址转换，NAT表有3种内建链</p><ul><li>PREROUTING：处理刚到达本机并在路由转发前的数据包。它会转换数据包中的目标IP地址（destination ip address），通常用于DNAT(destination NAT)。</li><li>POSTROUTING：处理即将离开本机的数据包。它会转换数据包中的源IP地址（source ip address），通常用于SNAT（source NAT）。</li><li>OUTPUT：处理本机产生的数据包。</li></ul><h3 id="filter" tabindex="-1">Filter <a class="header-anchor" href="#filter" aria-label="Permalink to &quot;Filter&quot;">​</a></h3><p>此表负责过滤数据包，iptables的默认表，具有3种内建链</p><ul><li>INPUT：处理来自外部的数据。</li><li>OUTPUT：处理向外发送的数据。</li><li>FORWARD：将数据转发到本机的其他网卡设备上。</li></ul><h3 id="security" tabindex="-1">Security <a class="header-anchor" href="#security" aria-label="Permalink to &quot;Security&quot;">​</a></h3><p>新加入的特性，用于强制访问控制（MAC）网络规则，有3种内建链</p><ul><li>INPUT</li><li>OUTPUT</li><li>FORWARD</li></ul><h2 id="iptables数据包处理流程图" tabindex="-1">iptables数据包处理流程图 <a class="header-anchor" href="#iptables数据包处理流程图" aria-label="Permalink to &quot;iptables数据包处理流程图&quot;">​</a></h2><p><img src="https://storyxc.com/images/blog/v2-6c9358844d8f440486551d925dfe36b5_1440w.jpg" alt="v2-6c9358844d8f440486551d925dfe36b5_1440w"></p><h2 id="iptables语法" tabindex="-1">iptables语法 <a class="header-anchor" href="#iptables语法" aria-label="Permalink to &quot;iptables语法&quot;">​</a></h2><h3 id="语法" tabindex="-1">语法 <a class="header-anchor" href="#语法" aria-label="Permalink to &quot;语法&quot;">​</a></h3><p><code>iptables [-t 表名] 命令选项 [链名] [匹配条件] [-j 策略] </code></p><p>iptables命令包含五个部分</p><ul><li><p>表名：要操作的表，不指定时默认操作Filter表</p></li><li><p>链名：要操作的链，不指定链时默认表内所有链</p></li><li><p>命令选项：要进行的操作</p></li><li><p>匹配条件：定义规则适用哪些数据包（匹配哪些数据包）</p></li><li><p>策略：匹配数据的目标执行的操作，说白了就是packet匹配上规则后该干嘛</p></li></ul><h3 id="常见的命令选项" tabindex="-1">常见的命令选项 <a class="header-anchor" href="#常见的命令选项" aria-label="Permalink to &quot;常见的命令选项&quot;">​</a></h3><ul><li>-A 在指定链的末尾添加（append）一条新的规则</li><li>-D 删除（delete）指定链中的某一条规则，可以按规则序号和内容删除</li><li>-I 在指定链中插入（insert）一条新的规则，默认在第一行添加</li><li>-R 修改、替换（replace）指定链中的某一条规则，可以按规则序号和内容替换</li><li>-L 列出（list）指定链中所有的规则进行查看</li><li>-E 重命名用户定义的链，不改变链本身</li><li>-F 清空（flush）</li><li>-N 新建（new-chain）一条用户自己定义的规则链</li><li>-X 删除指定表中用户自定义的规则链（delete-chain）</li><li>-P 设置指定链的默认策略（policy）</li><li>-Z 将所有表的所有链的字节和数据包计数器清零</li><li>-n 使用数字形式（numeric）显示输出结果</li><li>-v 查看规则表详细信息（verbose）的信息</li><li>-V 查看版本(version)</li><li>-h 获取帮助（help）</li></ul><h3 id="常见策略-target" tabindex="-1">常见策略（target） <a class="header-anchor" href="#常见策略-target" aria-label="Permalink to &quot;常见策略（target）&quot;">​</a></h3><ul><li><p>ACCEPT：允许数据包通过。</p></li><li><p>DROP：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</p></li><li><p>REJECT：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。</p></li><li><p>SNAT：源地址转换，解决内网用户用同一个公网地址上网的问题。</p></li><li><p>MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</p></li><li><p>DNAT：目标地址转换。</p></li><li><p>REDIRECT：在本机做端口映射。</p></li></ul><h3 id="添加规则" tabindex="-1">添加规则 <a class="header-anchor" href="#添加规则" aria-label="Permalink to &quot;添加规则&quot;">​</a></h3><ul><li>-A：在链的末尾追加一条规则，例如<code>iptables -A INPUT -s 127.0.0.1 -p tcp --dport 3306 -j ACCEPT</code></li><li>-I：在链的开头（或指定序号）插入一条规则，例如<code>iptables -I INPUT -p tcp -j ACCEPT</code>或<code>iptables -I INPUT 2 -p tcp -j ACCEPT</code></li></ul><h3 id="查看规则" tabindex="-1">查看规则 <a class="header-anchor" href="#查看规则" aria-label="Permalink to &quot;查看规则&quot;">​</a></h3><ul><li><p>-L：列出所有规则</p></li><li><p>-n：以数字形式显示地址、端口等信息</p></li><li><p>-v：显示更详细规则信息</p></li><li><p>--line-numbers：显示规则序号</p></li></ul><h3 id="删除规则" tabindex="-1">删除规则 <a class="header-anchor" href="#删除规则" aria-label="Permalink to &quot;删除规则&quot;">​</a></h3><ul><li><p>删除nat表INPUT链的第三条规则：<code>iptables -t nat -D INPUT 3</code></p></li><li><p>清空nat表所有规则：<code>iptables -t nat -F</code></p></li></ul><h3 id="给指定的链设置默认策略" tabindex="-1">给指定的链设置默认策略 <a class="header-anchor" href="#给指定的链设置默认策略" aria-label="Permalink to &quot;给指定的链设置默认策略&quot;">​</a></h3><ul><li><code>iptables -t filter -P FORWARD DROP</code></li></ul><h3 id="通用匹配" tabindex="-1">通用匹配 <a class="header-anchor" href="#通用匹配" aria-label="Permalink to &quot;通用匹配&quot;">​</a></h3><h4 id="协议匹配-p-protocol" tabindex="-1">协议匹配 -p（protocol） <a class="header-anchor" href="#协议匹配-p-protocol" aria-label="Permalink to &quot;协议匹配 -p（protocol）&quot;">​</a></h4><ul><li>指定规则的协议，如tcp, udp, icmp等，可以使用<strong>all</strong>来指定所有协议。</li><li>如果不指定**-p<strong>参数，则默认是</strong>all**值。这并不明智，请总是明确指定协议名称。</li><li>可以使用协议名(如tcp)，或者是协议值（比如6代表tcp）来指定协议。映射关系请查看/etc/protocols</li><li>还可以使用**–protocol<strong>参数代替</strong>-p**参数</li></ul><h4 id="地址匹配-s-d" tabindex="-1">地址匹配 -s -d： <a class="header-anchor" href="#地址匹配-s-d" aria-label="Permalink to &quot;地址匹配 -s -d：&quot;">​</a></h4><h5 id="s-源地址" tabindex="-1">-s 源地址 <a class="header-anchor" href="#s-源地址" aria-label="Permalink to &quot;-s 源地址&quot;">​</a></h5><ul><li>指定数据包的源地址</li><li>参数可以使IP地址、网络地址、主机名</li><li>例如：-s 192.168.1.101指定IP地址</li><li>例如：-s 192.168.1.10/24指定网络地址</li><li>如果不指定-s参数，就代表所有地址</li><li>还可以使用**–src<strong>或者</strong>–source**</li></ul><h5 id="d-目标地址" tabindex="-1">-d 目标地址 <a class="header-anchor" href="#d-目标地址" aria-label="Permalink to &quot;-d 目标地址&quot;">​</a></h5><ul><li>指定目的地址</li><li>参数和**-s**相同</li><li>还可以使用**–dst<strong>或者</strong>–destination**</li></ul><h4 id="接口匹配-i-o" tabindex="-1">接口匹配 -i -o <a class="header-anchor" href="#接口匹配-i-o" aria-label="Permalink to &quot;接口匹配 -i -o&quot;">​</a></h4><h5 id="i-输入接口-input-interface" tabindex="-1">-i 输入接口（input interface） <a class="header-anchor" href="#i-输入接口-input-interface" aria-label="Permalink to &quot;-i 输入接口（input interface）&quot;">​</a></h5><ul><li><strong>-i</strong>代表输入接口(input interface)</li><li><strong>-i</strong>指定了要处理来自哪个接口的数据包</li><li>这些数据包即将进入INPUT, FORWARD, PREROUTE链</li><li>例如：<strong>-i eth0</strong>指定了要处理经由eth0进入的数据包</li><li>如果不指定**-i**参数，那么将处理进入所有接口的数据包</li><li>如果出现**!** -i eth0，那么将处理所有经由<strong>eth0以外的接口</strong>进入的数据包</li><li>如果出现-i eth**+<strong>，那么将处理所有经由</strong>eth开头的接口**进入的数据包</li><li>还可以使用**–in-interface**参数</li></ul><h5 id="o-输出-out-interface" tabindex="-1">-o 输出（out interface） <a class="header-anchor" href="#o-输出-out-interface" aria-label="Permalink to &quot;-o 输出（out interface）&quot;">​</a></h5><ul><li><strong>-o</strong>代表”output interface”</li><li><strong>-o</strong>指定了数据包由哪个接口输出</li><li>这些数据包即将进入FORWARD, OUTPUT, POSTROUTING链</li><li>如果不指定**-o**选项，那么系统上的所有接口都可以作为输出接口</li><li>如果出现**!** -o eth0，那么将从<strong>eth0以外的接口</strong>输出</li><li>如果出现-i eth**+<strong>，那么将仅从</strong>eth开头的接口**输出</li><li>还可以使用**–out-interface**参数</li></ul><h3 id="隐含匹配" tabindex="-1">隐含匹配 <a class="header-anchor" href="#隐含匹配" aria-label="Permalink to &quot;隐含匹配&quot;">​</a></h3><h4 id="端口匹配" tabindex="-1">端口匹配 <a class="header-anchor" href="#端口匹配" aria-label="Permalink to &quot;端口匹配&quot;">​</a></h4><h5 id="–sport-源端口-source-port-针对-p-tcp-或者-p-udp" tabindex="-1">-–sport 源端口（source port） 针对-p tcp 或者 -p udp <a class="header-anchor" href="#–sport-源端口-source-port-针对-p-tcp-或者-p-udp" aria-label="Permalink to &quot;-–sport 源端口（source port） 针对-p tcp 或者 -p udp&quot;">​</a></h5><ul><li>缺省情况下，将匹配所有端口</li><li>可以指定端口号或者端口名称，例如”–sport 22″与”–sport ssh”。</li><li>/etc/services文件描述了上述映射关系。</li><li>从性能上讲，使用端口号更好</li><li>使用冒号可以匹配端口范围，如”–sport 22:100″</li><li>还可以使用”–source-port”</li></ul><h5 id="–-dport-目的端口-destination-port-针对-p-tcp-或者-p-udp" tabindex="-1">–-dport 目的端口（destination port） 针对-p tcp 或者 -p udp <a class="header-anchor" href="#–-dport-目的端口-destination-port-针对-p-tcp-或者-p-udp" aria-label="Permalink to &quot;–-dport 目的端口（destination port） 针对-p tcp 或者 -p udp&quot;">​</a></h5><ul><li>参数和–sport类似</li><li>还可以使用”–destination-port”</li></ul><h5 id="–tcp-flags-tcp标志-针对-p-tcp" tabindex="-1">-–tcp-flags TCP标志 针对-p tcp <a class="header-anchor" href="#–tcp-flags-tcp标志-针对-p-tcp" aria-label="Permalink to &quot;-–tcp-flags TCP标志 针对-p tcp&quot;">​</a></h5><ul><li>可以指定由逗号分隔的多个参数</li><li>有效值可以是：SYN, ACK, FIN, RST, URG, PSH</li><li>可以使用<strong>ALL</strong>或者<strong>NONE</strong></li></ul><h5 id="–icmp-type-icmp类型-针对-p-icmp" tabindex="-1">-–icmp-type ICMP类型 针对-p icmp <a class="header-anchor" href="#–icmp-type-icmp类型-针对-p-icmp" aria-label="Permalink to &quot;-–icmp-type ICMP类型 针对-p icmp&quot;">​</a></h5><ul><li>–icmp-type 0 表示Echo Reply</li><li>–icmp-type 8 表示Echo</li></ul><h3 id="显式匹配" tabindex="-1">显式匹配 <a class="header-anchor" href="#显式匹配" aria-label="Permalink to &quot;显式匹配&quot;">​</a></h3><p>多端口匹配 -m multiport --sport 源端口列表 -m multiport --dport 目的端口列表 IP范围匹配 -m iprange --src-range IP范围 MAC地址匹配 -m mac –mac1-source MAC地址 状态匹配 -m state --state 连接状态</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiport</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dport</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 25,80,110,143</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FORWARD</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> iprange</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --src-range</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 192.168.4.21-192.168.4.28</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mac</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --mac-source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 00:0c:29:c0:55:3f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DROP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -P</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> DROP</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> multiport</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dport</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 80-82,85</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">iptables</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -I</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> INPUT</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tcp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> state</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --state</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NEW,ESTABLISHED,RELATED</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -j</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ACCEPT</span></span></code></pre></div>`,65)]))}const u=a(e,[["render",p]]);export{c as __pageData,u as default};
