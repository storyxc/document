import{_ as a,c as i,o as n,a2 as e}from"./chunks/framework.CQECOx-R.js";const d=JSON.parse('{"title":"acme.sh使用","description":"","frontmatter":{},"headers":[],"relativePath":"linux/applications/acme.sh使用.md","filePath":"linux/applications/acme.sh使用.md","lastUpdated":1746516944000}'),l={name:"linux/applications/acme.sh使用.md"};function h(t,s,p,k,r,c){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="acme-sh使用" tabindex="-1">acme.sh使用 <a class="header-anchor" href="#acme-sh使用" aria-label="Permalink to &quot;acme.sh使用&quot;">​</a></h1><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>服务商目前都停止了签发1年有效期的SSL证书，有效期都缩短至3个月，这给多个域名管理带来极大不便。</p><h2 id="acme-sh项目" tabindex="-1">acme.sh项目 <a class="header-anchor" href="#acme-sh项目" aria-label="Permalink to &quot;acme.sh项目&quot;">​</a></h2><blockquote><p><a href="https://github.com/acmesh-official/acme.sh" target="_blank" rel="noreferrer">https://github.com/acmesh-official/acme.sh</a></p></blockquote><p><code>acme.sh</code>项目是一个纯shell脚本的ACME(Automatic Certificate Management Environment)客户端协议实现，能够帮助我们自动签发以及更新证书。</p><h2 id="acme-sh使用-1" tabindex="-1">acme.sh使用 <a class="header-anchor" href="#acme-sh使用-1" aria-label="Permalink to &quot;acme.sh使用&quot;">​</a></h2><blockquote><p><a href="https://github.com/acmesh-official/acme.sh/wiki" target="_blank" rel="noreferrer">https://github.com/acmesh-official/acme.sh/wiki</a></p></blockquote><h3 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h3><p><code>curl https://get.acme.sh | sh -s email=my@example.com</code></p><h3 id="签发证书" tabindex="-1">签发证书 <a class="header-anchor" href="#签发证书" aria-label="Permalink to &quot;签发证书&quot;">​</a></h3><blockquote><p><a href="https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert" target="_blank" rel="noreferrer">https://github.com/acmesh-official/acme.sh/wiki/How-to-issue-a-cert</a></p></blockquote><blockquote><p><strong>ACME-challenge</strong></p><p><strong>ACME-challenge</strong> 是 ACME 协议中的一部分，旨在验证用户对某个域名的控制权。ACME 协议支持多种验证方式，其中 HTTP-01 是最常用的一种，涉及到 .well-known/acme-challenge。</p><p>当用户请求证书时，证书颁发机构 (CA) 需要确认申请人对该域名的控制权。这是通过向 CA 提供某种形式的“挑战”并成功响应它来完成的。ACME-challenge 验证方式包括：</p><p>1.<strong>HTTP-01 验证</strong>：通过 HTTP 请求验证域名的所有权。</p><p>2.<strong>DNS-01 验证</strong>：通过 DNS 记录验证域名的所有权。</p><p>3.<strong>TLS-ALPN-01 验证</strong>：通过特定的 TLS 握手协议验证域名的所有权。</p><p>其中最常用的是 <strong>HTTP-01</strong> 验证，通过 .well-known/acme-challenge 目录进行。</p><p>•HTTP-01 验证要求服务器通过 HTTP（端口 80）公开访问验证文件，因此服务器需要监听 HTTP 请求。如果所有流量都强制重定向到 HTTPS，可能会导致验证失败。你可以专门为验证请求保留对 HTTP 的访问权限（即通过 Nginx 配置保留 .well-known/acme-challenge/ 目录的请求）。</p><p>•验证文件只能通过 HTTP 访问，不能通过 HTTPS，因此确保 .well-known/acme-challenge 路径上的请求不会被重定向。</p></blockquote><h4 id="nginx模式" tabindex="-1">nginx模式 <a class="header-anchor" href="#nginx模式" aria-label="Permalink to &quot;nginx模式&quot;">​</a></h4><p><code>acme.sh --issue -d example.com --nginx</code></p><p><code>acme.sh --issue -d example.com --nginx /etc/nginx/nginx.conf</code></p><p><code>acme.sh --issue -d example.com --nginx /etc/nginx/conf.d/example.com.conf</code></p><p>如果配置了强制https，需要修改vhost的配置</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     [::]:80;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domain.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://$host$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">为</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     [::]:80;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domain.com;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    		return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://$host$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		}</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>随后，acme.sh会自动在server配置上增加关于.well-knwon/acme-challenge的location配置,验证完成后自动恢复原本的配置文件</p><div class="language-nginx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">nginx</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTP redirect</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     80</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    listen </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     [::]:80;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    server_name </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">domain.com;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#ACME_NGINX_START</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">location</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ~</span><span style="--shiki-light:#032F62;--shiki-dark:#DBEDFF;"> &quot;^/\\.well-known/acme-challenge/([-_a-zA-Z0-9]+)$&quot; </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  default_type </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">text/plain;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 200</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;xxxxxxxxxxxxxx&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#NGINX_START</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 其他请求仍然重定向到 HTTPS</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    location</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> / </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 301</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> https://$host$request_uri;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h4 id="dns模式" tabindex="-1">dns模式 <a class="header-anchor" href="#dns模式" aria-label="Permalink to &quot;dns模式&quot;">​</a></h4><p>以我用的dnspod为例</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DP_Id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DP_Key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;abcd&quot;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">acme.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --issue</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dns</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dns_dp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> domain.com</span></span></code></pre></div><h3 id="安装证书" tabindex="-1">安装证书 <a class="header-anchor" href="#安装证书" aria-label="Permalink to &quot;安装证书&quot;">​</a></h3><h4 id="nginx" tabindex="-1">nginx <a class="header-anchor" href="#nginx" aria-label="Permalink to &quot;nginx&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">acme.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-cert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> domain.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--key-file </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/nginx/ssl/domain.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--fullchain-file </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/etc/nginx/ssl/domain.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--reloadcmd </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;systemctl reload nginx&quot;</span></span></code></pre></div><h4 id="docker" tabindex="-1">docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;docker&quot;">​</a></h4><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">acme.sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --install-cert</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> domain.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--key-file </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/domain.key</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--fullchain-file </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/path/domain.crt</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">--reloadcmd </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;docker restart docker-nginx&quot;</span></span></code></pre></div><h2 id="自动更新证书" tabindex="-1">自动更新证书 <a class="header-anchor" href="#自动更新证书" aria-label="Permalink to &quot;自动更新证书&quot;">​</a></h2><p>在执行安装脚本时，脚本会自动创建crontab任务</p><p><code>30 1 * * * &quot;/root/.acme.sh&quot;/acme.sh --cron --home &quot;/root/.acme.sh&quot; &gt; /dev/null</code></p><p>当证书剩余有效期少于 30 天时，acme.sh 会尝试更新证书。</p><h2 id="自动更新脚本" tabindex="-1">自动更新脚本 <a class="header-anchor" href="#自动更新脚本" aria-label="Permalink to &quot;自动更新脚本&quot;">​</a></h2><p><code>acme.sh --upgrade --auto-upgrade</code></p><h3 id="关闭自动更新" tabindex="-1">关闭自动更新 <a class="header-anchor" href="#关闭自动更新" aria-label="Permalink to &quot;关闭自动更新&quot;">​</a></h3><p><code>acme.sh --upgrade --auto-upgrade 0</code></p><h3 id="手动更新" tabindex="-1">手动更新 <a class="header-anchor" href="#手动更新" aria-label="Permalink to &quot;手动更新&quot;">​</a></h3><p><code>acme.sh --upgrade</code></p>`,39)]))}const g=a(l,[["render",h]]);export{d as __pageData,g as default};
