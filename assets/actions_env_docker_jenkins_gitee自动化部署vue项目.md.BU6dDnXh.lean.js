import{_ as i,c as a,o as n,a2 as e}from"./chunks/framework.CQECOx-R.js";const g=JSON.parse('{"title":"docker+jenkins+gitee自动化部署vue项目","description":"","frontmatter":{},"headers":[],"relativePath":"actions/env/docker+jenkins+gitee自动化部署vue项目.md","filePath":"actions/env/docker+jenkins+gitee自动化部署vue项目.md","lastUpdated":1746516944000}'),l={name:"actions/env/docker+jenkins+gitee自动化部署vue项目.md"};function t(p,s,h,k,r,F){return n(),a("div",null,s[0]||(s[0]=[e(`<h1 id="docker-jenkins-gitee自动化部署vue项目" tabindex="-1">docker+jenkins+gitee自动化部署vue项目 <a class="header-anchor" href="#docker-jenkins-gitee自动化部署vue项目" aria-label="Permalink to &quot;docker+jenkins+gitee自动化部署vue项目&quot;">​</a></h1><p>之前<a href="https://blog.storyxc.com" target="_blank" rel="noreferrer">个人博客</a>一直用的travisCI部署在github page上，但是偶尔会抽风无法访问。之前一直偷懒没部署jenkins，手动部署到云服务器又比较麻烦，打包上传很浪费时间，这次就直接动手一步到位，在自己服务器上部署下jekins。</p><h2 id="docker启动jenkins" tabindex="-1">docker启动jenkins <a class="header-anchor" href="#docker启动jenkins" aria-label="Permalink to &quot;docker启动jenkins&quot;">​</a></h2><ul><li>启动容器</li></ul><p>最开始用的jenkins中文社区的镜像发现有个很恶心的问题，jenkins版本比较低而且安装了NodeJS插件后在全局工具配置中配置NodeJS安装环境时无法选择版本，所以还是官方镜像比较靠谱。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 拉取官方镜像</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins/jenkins:lts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lts:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pulling</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins/jenkins</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4c25b3090c26:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">750d566fdd60:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2718cc36ca02:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">5678b027ee14:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c839cd2df78d:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">50861a5addda:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ff2b028e5cf5:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ee710b58f452:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2625c929bb0e:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">6a6bf9181c04:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bee5e6792ac4:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">6cc5edd2133e:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c07b16426ded:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">e9ac42647ae3:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fa925738a490:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">4a08c3886279:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">2d43fec22b7e:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> complete</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Digest:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sha256:a942c30fc3bcf269a1c32ba27eb4a470148eff9aba086911320031a3c3943e6c</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Status:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Downloaded</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> newer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> image</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins/jenkins:lts</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker.io/jenkins/jenkins:lts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动jenkins</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -dp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 8099:8080</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /story/dist:/story/dist</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/jenkins_data:/var/jenkins_home</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -u</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> TZ=&quot;Asia/Shanghai&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/localtime:/etc/localtime:ro</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins/jenkins:lts</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 参数说明 --name 指定容器名为jenkins -d 后台启动 -p 将容器的8080端口映射到宿主机的8099端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># -v 挂载宿主机目录 宿主机和容器的目录会同步 -u 指定用户为root 这里是必须的 不然后续操作文件系统会报无权限</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 挂载时区的目录是因为镜像中的linux系统默认时区非北京时间，会导致时间显示不正确</span></span></code></pre></div><ul><li>启动后直接访问本机8099端口：<code>http://localhost:8099/</code>（我这里是本地测试，实际请替换成自己的服务器地址）</li></ul><h2 id="apt安装" tabindex="-1">apt安装 <a class="header-anchor" href="#apt安装" aria-label="Permalink to &quot;apt安装&quot;">​</a></h2><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  /usr/share/keyrings/jenkins-keyring.asc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /dev/null</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;echo &quot;deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/&quot; &gt; /etc/apt/sources.list.d/jenkins.list&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Jenkins requires Java 11 or 17 since Jenkins 2.357 and LTS 2.361.1. </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> openjdk-17-jdk</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span></span></code></pre></div><p><img src="https://storyxc.com/images/blog//image-20210914101747191.png" alt="image-20210914101747191"></p><ul><li>进到容器中查询下密码</li></ul><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkins</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/bash</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/jenkins_home/secrets/initialAdminPassword</span></span></code></pre></div><p>或者直接在上面挂载的目录查询但要改一下路径</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/jenkins_data/secrets/initialAdminPassword</span></span></code></pre></div><ul><li>使用密码登录后直接安装推荐插件即可</li></ul><p><img src="https://storyxc.com/images/blog//image-20210914102028448.png" alt="image-20210914102028448"></p><ul><li>等待安装完成</li></ul><p><img src="https://storyxc.com/images/blog//image-20210914102652130.png" alt="image-20210914102652130"></p><ul><li>新建账户</li></ul><p><img src="https://storyxc.com/images/blog//image-20210914102716607.png" alt="image-20210914102716607"></p><ul><li><p>实例配置</p><p><img src="https://storyxc.com/images/blog//image-20210914102906576.png" alt="image-20210914102906576"></p></li><li><p>完成</p><p><img src="https://storyxc.com/images/blog//image-20210914102924807.png" alt=""></p></li></ul><h2 id="jenkins配置自动部署" tabindex="-1">jenkins配置自动部署 <a class="header-anchor" href="#jenkins配置自动部署" aria-label="Permalink to &quot;jenkins配置自动部署&quot;">​</a></h2><h3 id="安装node和gitee插件" tabindex="-1">安装node和gitee插件 <a class="header-anchor" href="#安装node和gitee插件" aria-label="Permalink to &quot;安装node和gitee插件&quot;">​</a></h3><p>Manage Jenkins ---&gt; Manage Plugins ---&gt; 可选插件分别搜索gitee和nodejs <img src="https://storyxc.com/images/blog//image-20210914111457469.png" alt="image-20210914111457469"></p><p><img src="https://storyxc.com/images/blog//image-20210914111526455.png" alt="image-20210914111526455"></p><p>选择install without restart</p><p>安装完毕后返回工作台</p><h3 id="配置node环境" tabindex="-1">配置node环境 <a class="header-anchor" href="#配置node环境" aria-label="Permalink to &quot;配置node环境&quot;">​</a></h3><p>Manage Jenkins ---&gt; Global Tool Configuration ---&gt; NodeJS</p><p>新增NodeJS取别名后保存即可</p><p><img src="https://storyxc.com/images/blog//image-20210914111718160.png" alt="image-20210914111718160"></p><h2 id="新建自动部署任务" tabindex="-1">新建自动部署任务 <a class="header-anchor" href="#新建自动部署任务" aria-label="Permalink to &quot;新建自动部署任务&quot;">​</a></h2><h3 id="新建任务" tabindex="-1">新建任务 <a class="header-anchor" href="#新建任务" aria-label="Permalink to &quot;新建任务&quot;">​</a></h3><p>工作台点击新建Item，输入任务名称后选择freestyle project确定</p><p><img src="https://storyxc.com/images/blog//image-20210914111819597.png" alt="image-20210914111819597"></p><h3 id="配置gitee相关内容" tabindex="-1">配置gitee相关内容 <a class="header-anchor" href="#配置gitee相关内容" aria-label="Permalink to &quot;配置gitee相关内容&quot;">​</a></h3><h4 id="源码管理" tabindex="-1">源码管理 <a class="header-anchor" href="#源码管理" aria-label="Permalink to &quot;源码管理&quot;">​</a></h4><ul><li>添加gitee仓库地址，指定要打包的分支</li></ul><p><img src="https://storyxc.com/images/blog//image-20210914112017978.png" alt="image-20210914112017978"></p><h4 id="构建触发器" tabindex="-1">构建触发器 <a class="header-anchor" href="#构建触发器" aria-label="Permalink to &quot;构建触发器&quot;">​</a></h4><p><img src="https://storyxc.com/images/blog//image-20210914112740392.png" alt="image-20210914112740392"></p><ul><li>生成webhook密码</li></ul><p><img src="https://storyxc.com/images/blog//image-20210914112804397.png" alt="image-20210914112804397"></p><ul><li><p>去gitee仓库中配置webhook内容</p><p>仓库的管理tab页添加webhook</p><p><img src="https://storyxc.com/images/blog//image-20210914112946461.png" alt="image-20210914112946461"></p></li></ul><p>url和webhook密码分别填写后保存</p><p><img src="https://storyxc.com/images/blog//image-20210914113229679.png" alt="image-20210914113229679"></p><p>在这个页面点击测试，如果看到xxx has been accepted即为成功。</p><h4 id="构建环境" tabindex="-1">构建环境 <a class="header-anchor" href="#构建环境" aria-label="Permalink to &quot;构建环境&quot;">​</a></h4><p>选择前面已经配置好的node环境即可</p><p><img src="https://storyxc.com/images/blog//image-20210914113502188.png" alt="image-20210914113502188"></p><h4 id="构建" tabindex="-1">构建 <a class="header-anchor" href="#构建" aria-label="Permalink to &quot;构建&quot;">​</a></h4><p>首先在任务面板中点击立即构建，这样才会生成工作空间</p><p><img src="https://storyxc.com/images/blog//image-20210914114129450.png" alt="image-20210914114129450"></p><p>我这里选择执行shell</p><p><img src="https://storyxc.com/images/blog//image-20210914113546293.png" alt="image-20210914113546293"></p><p>然后就是写个简单的脚本执行打包，替换的工作</p><p><img src="https://storyxc.com/images/blog//image-20210914113643970.png" alt="image-20210914113643970"></p><p><strong>第一步cd进入的目录是当前任务的工作空间，这里要把vuepress替换成自己的任务名称即可</strong></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>这里涉及到文件系统操作的内容rm cp等命令需要root用户才能执行，所以在启动docker容器的时候必须使用-u root参数指定root用户，否则打包会失败，操作文件时会提示无权限</p></div><p>配置完毕保存即可</p><h2 id="测试" tabindex="-1">测试 <a class="header-anchor" href="#测试" aria-label="Permalink to &quot;测试&quot;">​</a></h2><p>点击立即构建或者往gitee仓库推送一次更新即可触发构建任务，然后等待构建完成即可。</p><p><img src="https://storyxc.com/images/blog//image-20210914114542885.png" alt="image-20210914114542885"></p><p>如果是第一次执行构建，jenkins还会自动安装解压nodejs。</p><p>通过脚本替换完打包好的dist后，通过nginx配置部署静态项目即可。</p><h2 id="jenkins打包跨平台docker镜像并推送镜像仓库" tabindex="-1">jenkins打包跨平台docker镜像并推送镜像仓库 <a class="header-anchor" href="#jenkins打包跨平台docker镜像并推送镜像仓库" aria-label="Permalink to &quot;jenkins打包跨平台docker镜像并推送镜像仓库&quot;">​</a></h2><p>这里是用宿主机直接安装的jenkins</p><ul><li><p>把jenkins用户添加到docker组中然后重启jenkins：<code>sudo usermod -aG docker jenkins</code></p><blockquote><p>getent group groupname 查看组中有哪些用户</p></blockquote></li><li><p>shell</p></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#!/bin/sh</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/lib/jenkins/workspace/xxx</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">node</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> buildx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> buildx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jenkinsbuilder</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> buildx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Dockerfile</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Dockerfile</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">// doSomething</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">EOF</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> login</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxx.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --username=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --password==</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;xxx&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> buildx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --platform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> linux/amd64,linux/arm64</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xxx/xxx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --push</span></span></code></pre></div><h2 id="阻止jenkins杀死衍生进程" tabindex="-1">阻止jenkins杀死衍生进程 <a class="header-anchor" href="#阻止jenkins杀死衍生进程" aria-label="Permalink to &quot;阻止jenkins杀死衍生进程&quot;">​</a></h2><p>在<code>Execute shell</code>中添加如下变量</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">BUILD_ID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">DONTKILLME</span></span></code></pre></div>`,72)]))}const o=i(l,[["render",t]]);export{g as __pageData,o as default};
