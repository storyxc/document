import{_ as e,c as i,o as a,a2 as t}from"./chunks/framework.CQECOx-R.js";const k=JSON.parse('{"title":"WSL","description":"","frontmatter":{},"headers":[],"relativePath":"actions/env/WSL.md","filePath":"actions/env/WSL.md","lastUpdated":1746516944000}'),l={name:"actions/env/WSL.md"};function n(o,s,d,r,h,p){return a(),i("div",null,s[0]||(s[0]=[t(`<h1 id="wsl" tabindex="-1">WSL <a class="header-anchor" href="#wsl" aria-label="Permalink to &quot;WSL&quot;">​</a></h1><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><ul><li>步骤 1 - 启用适用于 Linux 的 Windows 子系统<code>dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</code></li><li>步骤 2 - 检查运行 WSL 2 的要求，不同架构的系统版本要求不同</li><li>步骤 3 - 启用虚拟机功能，前提是开启虚拟化，如何开启虚拟化不再赘述<code>dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</code></li><li>步骤 4 - 下载 Linux 内核更新包，地址：<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi" target="_blank" rel="noreferrer">https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi</a></li><li>步骤 5 - 将 WSL 2 设置为默认版本<code>wsl --set-default-version 2</code></li><li>步骤 6 - 安装所选的 Linux 分发，官方提供的方案是在微软商店中下载，因为网络原因很难实现，采取手动下载或命令行下载，参考地址<code>https://docs.microsoft.com/zh-cn/windows/wsl/install-manual</code>，下载完成后cd到下载的目录，执行<code>Add-AppxPackage .\\filename</code>即可</li><li>查看所有安装的分发版本<code>wsl --list --all</code></li><li>卸载指定的分发版本<code>wsl --unregister &lt;DistributionName&gt;</code></li></ul><h2 id="开机启动" tabindex="-1">开机启动 <a class="header-anchor" href="#开机启动" aria-label="Permalink to &quot;开机启动&quot;">​</a></h2><p><code>win+R</code>运行<code>shell:startup</code>打开开机启动程序文件夹，创建vbs脚本<code>wsl.vbs</code></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objShell</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CreateObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;WScript.Shell&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">objShell.Run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;cmd /c wsl -d Debian&quot;,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> objShell</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nothing</span></span></code></pre></div><h2 id="启用systemd" tabindex="-1">启用systemd <a class="header-anchor" href="#启用systemd" aria-label="Permalink to &quot;启用systemd&quot;">​</a></h2><blockquote><p><a href="https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/" target="_blank" rel="noreferrer">https://devblogs.microsoft.com/commandline/systemd-support-is-now-available-in-wsl/</a></p></blockquote><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">//wsl.conf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[boot]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">systemd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=true</span></span></code></pre></div><p><code>systemctl list-unit-files --type=service</code>检查systemd运行状态</p>`,10)]))}const u=e(l,[["render",n]]);export{k as __pageData,u as default};
