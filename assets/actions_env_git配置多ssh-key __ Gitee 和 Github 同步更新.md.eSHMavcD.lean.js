import{_ as i,c as a,o as e,a2 as t}from"./chunks/framework.CQECOx-R.js";const r=JSON.parse('{"title":"git配置多ssh-key && Gitee 和 Github 同步更新","description":"","frontmatter":{},"headers":[],"relativePath":"actions/env/git配置多ssh-key && Gitee 和 Github 同步更新.md","filePath":"actions/env/git配置多ssh-key && Gitee 和 Github 同步更新.md","lastUpdated":1746516944000}'),n={name:"actions/env/git配置多ssh-key && Gitee 和 Github 同步更新.md"};function p(h,s,l,k,g,o){return e(),a("div",null,s[0]||(s[0]=[t(`<h1 id="git配置多ssh-key-gitee-和-github-同步更新" tabindex="-1">git配置多ssh-key &amp;&amp; Gitee 和 Github 同步更新 <a class="header-anchor" href="#git配置多ssh-key-gitee-和-github-同步更新" aria-label="Permalink to &quot;git配置多ssh-key &amp;&amp; Gitee 和 Github 同步更新&quot;">​</a></h1><h2 id="配置多ssh-key" tabindex="-1">配置多ssh-key <a class="header-anchor" href="#配置多ssh-key" aria-label="Permalink to &quot;配置多ssh-key&quot;">​</a></h2><p>gitee或者gitlab账号和个人git账号同时在一台机器上使用时，可以为不同git服务器设置不同的ssh-key</p><ol><li><p>生成一个个人github的ssh-key</p><p><code>ssh-keygen -t rsa -C &#39;xxxxx@163.com&#39; -f ~/.ssh/github_id_rsa</code></p></li><li><p>生成一个gitee的ssh-key</p><p><code>ssh-keygen -t rsa -C &#39;xxxxx@company.cn&#39; -f ~/.ssh/gitee_id_rsa</code></p></li><li><p>在<code>~/.ssh</code>下新建config文件<code>vim ~/.ssh/config</code>，添加以下内容</p><div class="language-txt vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">txt</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span># gitee</span></span>
<span class="line"><span>Host gitee.com</span></span>
<span class="line"><span>HostName gitee.com</span></span>
<span class="line"><span>PreferredAuthentications publickey</span></span>
<span class="line"><span>IdentityFile ~/.ssh/gitee_id_rsa</span></span>
<span class="line"><span># github</span></span>
<span class="line"><span>Host github.com</span></span>
<span class="line"><span>HostName github.com</span></span>
<span class="line"><span>PreferredAuthentications publickey</span></span>
<span class="line"><span>IdentityFile ~/.ssh/github_id_rsa</span></span></code></pre></div></li><li><p>分别在gitee和github中添加前两步生成的对应地址的公钥</p></li><li><p>ssh命令测试</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@gitee.com</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ssh</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com</span></span></code></pre></div></li></ol><p>如果看到 hi xxx！。。。内容则证明配置成功</p><h2 id="gitee-和-github-同步更新" tabindex="-1">Gitee 和 Github 同步更新 <a class="header-anchor" href="#gitee-和-github-同步更新" aria-label="Permalink to &quot;Gitee 和 Github 同步更新&quot;">​</a></h2><p>假设我们有一个项目同时在github和gitee上都有仓库，当直接使用<code>git clone</code>命令拉取的代码默认remote为origin，如果要分别更新，我们要分别在两个本地仓库中push。这时我们可以给本地仓库添加多个origin，然后更新的时候分别推送即可实现一个本地仓库分别推送两个不同的远程仓库。</p><ol><li><p>删除原有的remote地址</p><p><code>git remote remove origin</code></p></li><li><p>添加新的远程仓库地址（gitee）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eg:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gitee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@gitee.com:xxx/xxx.git</span></span></code></pre></div></li><li><p>添加新的远程仓库地址（github）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库名</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 远程仓库地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">eg:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> remote</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> add</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> github</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git@github.com:xxx/xxx.git</span></span></code></pre></div><p>再次查看<code>git remote</code>:</p><p><img src="https://storyxc.com/images/blog//image-20210913184204396.png" alt="image-20210913184204396"></p></li><li><p>推送的时候<code>git push 远程仓库名</code>即可</p></li></ol><h3 id="修改配置文件一次推送多个仓库" tabindex="-1">修改配置文件一次推送多个仓库 <a class="header-anchor" href="#修改配置文件一次推送多个仓库" aria-label="Permalink to &quot;修改配置文件一次推送多个仓库&quot;">​</a></h3><p>修改仓库下.git/config文件，新增内容</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[remote </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo1.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo2.git</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        url</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> repo3.git</span></span></code></pre></div><p>直接<code>git push all</code></p>`,12)]))}const c=i(n,[["render",p]]);export{r as __pageData,c as default};
