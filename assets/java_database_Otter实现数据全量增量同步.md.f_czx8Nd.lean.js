import{_ as s,c as a,o as e,a2 as E}from"./chunks/framework.CQECOx-R.js";const T=JSON.parse('{"title":"Otter实现数据全量增量同步","description":"","frontmatter":{},"headers":[],"relativePath":"java/database/Otter实现数据全量增量同步.md","filePath":"java/database/Otter实现数据全量增量同步.md","lastUpdated":1746516944000}'),n={name:"java/database/Otter实现数据全量增量同步.md"};function t(d,i,o,l,h,c){return e(),a("div",null,i[0]||(i[0]=[E(`<h1 id="otter实现数据全量增量同步" tabindex="-1">Otter实现数据全量增量同步 <a class="header-anchor" href="#otter实现数据全量增量同步" aria-label="Permalink to &quot;Otter实现数据全量增量同步&quot;">​</a></h1><p>otter是一款基于数据库增量日志解析，准实时同步到本机房或异地机房的mysql/oracle数据库. 一个分布式数据库同步系统</p><p>仓库地址：<code>https://github.com/alibaba/otter</code></p><h2 id="前置工作" tabindex="-1">前置工作 <a class="header-anchor" href="#前置工作" aria-label="Permalink to &quot;前置工作&quot;">​</a></h2><ul><li><p>源库开启binlog，并且必须是ROW模式</p></li><li><p>需要启动zookeeper</p></li><li><p>otter是基于canal的，但是otter项目本身内嵌了canal，所以无需独立启动canal-server</p></li><li><p>初始化otter数据库</p><ul><li><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div></li></ul><p>CREATE DATABASE /<em>!32312 IF NOT EXISTS</em>/ <code>otter</code> /*!40100 DEFAULT CHARACTER SET utf8 COLLATE utf8_bin */;</p><p>USE <code>otter</code>;</p><p>SET sql_mode=&#39;ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#39;;</p><p>CREATE TABLE <code>ALARM_RULE</code> ( <code>ID</code> bigint(20) unsigned NOT NULL AUTO_INCREMENT, <code>MONITOR_NAME</code> varchar(1024) DEFAULT NULL, <code>RECEIVER_KEY</code> varchar(1024) DEFAULT NULL, <code>STATUS</code> varchar(32) DEFAULT NULL, <code>PIPELINE_ID</code> bigint(20) NOT NULL, <code>DESCRIPTION</code> varchar(256) DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, <code>MATCH_VALUE</code> varchar(1024) DEFAULT NULL, <code>PARAMETERS</code> text DEFAULT NULL, PRIMARY KEY (<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>AUTOKEEPER_CLUSTER</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>CLUSTER_NAME</code> varchar(200) NOT NULL, <code>SERVER_LIST</code> varchar(1024) NOT NULL, <code>DESCRIPTION</code> varchar(200) DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>CANAL</code> ( <code>ID</code> bigint(20) unsigned NOT NULL AUTO_INCREMENT, <code>NAME</code> varchar(200) DEFAULT NULL, <code>DESCRIPTION</code> varchar(200) DEFAULT NULL, <code>PARAMETERS</code> text DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>CANALUNIQUE</code> (<code>NAME</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>CHANNEL</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NAME</code> varchar(200) NOT NULL, <code>DESCRIPTION</code> varchar(200) DEFAULT NULL, <code>PARAMETERS</code> text DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>CHANNELUNIQUE</code> (<code>NAME</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>COLUMN_PAIR</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>SOURCE_COLUMN</code> varchar(200) DEFAULT NULL, <code>TARGET_COLUMN</code> varchar(200) DEFAULT NULL, <code>DATA_MEDIA_PAIR_ID</code> bigint(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_DATA_MEDIA_PAIR_ID</code> (<code>DATA_MEDIA_PAIR_ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>COLUMN_PAIR_GROUP</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>DATA_MEDIA_PAIR_ID</code> bigint(20) NOT NULL, <code>COLUMN_PAIR_CONTENT</code> text DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_DATA_MEDIA_PAIR_ID</code> (<code>DATA_MEDIA_PAIR_ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>DATA_MEDIA</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NAME</code> varchar(200) NOT NULL, <code>NAMESPACE</code> varchar(200) NOT NULL, <code>PROPERTIES</code> varchar(1000) NOT NULL, <code>DATA_MEDIA_SOURCE_ID</code> bigint(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>DATAMEDIAUNIQUE</code> (<code>NAME</code>,<code>NAMESPACE</code>,<code>DATA_MEDIA_SOURCE_ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>DATA_MEDIA_PAIR</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>PULLWEIGHT</code> bigint(20) DEFAULT NULL, <code>PUSHWEIGHT</code> bigint(20) DEFAULT NULL, <code>RESOLVER</code> text DEFAULT NULL, <code>FILTER</code> text DEFAULT NULL, <code>SOURCE_DATA_MEDIA_ID</code> bigint(20) DEFAULT NULL, <code>TARGET_DATA_MEDIA_ID</code> bigint(20) DEFAULT NULL, <code>PIPELINE_ID</code> bigint(20) NOT NULL, <code>COLUMN_PAIR_MODE</code> varchar(20) DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_PipelineID</code> (<code>PIPELINE_ID</code>,<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>DATA_MEDIA_SOURCE</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NAME</code> varchar(200) NOT NULL, <code>TYPE</code> varchar(20) NOT NULL, <code>PROPERTIES</code> varchar(1000) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>DATAMEDIASOURCEUNIQUE</code> (<code>NAME</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>DELAY_STAT</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>DELAY_TIME</code> bigint(20) NOT NULL, <code>DELAY_NUMBER</code> bigint(20) NOT NULL, <code>PIPELINE_ID</code> bigint(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_PipelineID_GmtModified_ID</code> (<code>PIPELINE_ID</code>,<code>GMT_MODIFIED</code>,<code>ID</code>), KEY <code>idx_Pipeline_GmtCreate</code> (<code>PIPELINE_ID</code>,<code>GMT_CREATE</code>), KEY <code>idx_GmtCreate_id</code> (<code>GMT_CREATE</code>,<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>LOG_RECORD</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NID</code> varchar(200) DEFAULT NULL, <code>CHANNEL_ID</code> varchar(200) NOT NULL, <code>PIPELINE_ID</code> varchar(200) NOT NULL, <code>TITLE</code> varchar(1000) DEFAULT NULL, <code>MESSAGE</code> text DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>logRecord_pipelineId</code> (<code>PIPELINE_ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>NODE</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NAME</code> varchar(200) NOT NULL, <code>IP</code> varchar(200) NOT NULL, <code>PORT</code> bigint(20) NOT NULL, <code>DESCRIPTION</code> varchar(200) DEFAULT NULL, <code>PARAMETERS</code> text DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>NODEUNIQUE</code> (<code>NAME</code>,<code>IP</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>PIPELINE</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NAME</code> varchar(200) NOT NULL, <code>DESCRIPTION</code> varchar(200) DEFAULT NULL, <code>PARAMETERS</code> text DEFAULT NULL, <code>CHANNEL_ID</code> bigint(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>PIPELINEUNIQUE</code> (<code>NAME</code>,<code>CHANNEL_ID</code>), KEY <code>idx_ChannelID</code> (<code>CHANNEL_ID</code>,<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>PIPELINE_NODE_RELATION</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>NODE_ID</code> bigint(20) NOT NULL, <code>PIPELINE_ID</code> bigint(20) NOT NULL, <code>LOCATION</code> varchar(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_PipelineID</code> (<code>PIPELINE_ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>SYSTEM_PARAMETER</code> ( <code>ID</code> bigint(20) unsigned NOT NULL, <code>VALUE</code> text DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>TABLE_HISTORY_STAT</code> ( <code>ID</code> bigint(20) unsigned NOT NULL AUTO_INCREMENT, <code>FILE_SIZE</code> bigint(20) DEFAULT NULL, <code>FILE_COUNT</code> bigint(20) DEFAULT NULL, <code>INSERT_COUNT</code> bigint(20) DEFAULT NULL, <code>UPDATE_COUNT</code> bigint(20) DEFAULT NULL, <code>DELETE_COUNT</code> bigint(20) DEFAULT NULL, <code>DATA_MEDIA_PAIR_ID</code> bigint(20) DEFAULT NULL, <code>PIPELINE_ID</code> bigint(20) DEFAULT NULL, <code>START_TIME</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>END_TIME</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_DATA_MEDIA_PAIR_ID_END_TIME</code> (<code>DATA_MEDIA_PAIR_ID</code>,<code>END_TIME</code>), KEY <code>idx_GmtCreate_id</code> (<code>GMT_CREATE</code>,<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>TABLE_STAT</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>FILE_SIZE</code> bigint(20) NOT NULL, <code>FILE_COUNT</code> bigint(20) NOT NULL, <code>INSERT_COUNT</code> bigint(20) NOT NULL, <code>UPDATE_COUNT</code> bigint(20) NOT NULL, <code>DELETE_COUNT</code> bigint(20) NOT NULL, <code>DATA_MEDIA_PAIR_ID</code> bigint(20) NOT NULL, <code>PIPELINE_ID</code> bigint(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_PipelineID_DataMediaPairID</code> (<code>PIPELINE_ID</code>,<code>DATA_MEDIA_PAIR_ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>THROUGHPUT_STAT</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>TYPE</code> varchar(20) NOT NULL, <code>NUMBER</code> bigint(20) NOT NULL, <code>SIZE</code> bigint(20) NOT NULL, <code>PIPELINE_ID</code> bigint(20) NOT NULL, <code>START_TIME</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>END_TIME</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>idx_PipelineID_Type_GmtCreate_ID</code> (<code>PIPELINE_ID</code>,<code>TYPE</code>,<code>GMT_CREATE</code>,<code>ID</code>), KEY <code>idx_PipelineID_Type_EndTime_ID</code> (<code>PIPELINE_ID</code>,<code>TYPE</code>,<code>END_TIME</code>,<code>ID</code>), KEY <code>idx_GmtCreate_id</code> (<code>GMT_CREATE</code>,<code>ID</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>USER</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>USERNAME</code> varchar(20) NOT NULL, <code>PASSWORD</code> varchar(20) NOT NULL, <code>AUTHORIZETYPE</code> varchar(20) NOT NULL, <code>DEPARTMENT</code> varchar(20) NOT NULL, <code>REALNAME</code> varchar(20) NOT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), UNIQUE KEY <code>USERUNIQUE</code> (<code>USERNAME</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE <code>DATA_MATRIX</code> ( <code>ID</code> bigint(20) NOT NULL AUTO_INCREMENT, <code>GROUP_KEY</code> varchar(200) DEFAULT NULL, <code>MASTER</code> varchar(200) DEFAULT NULL, <code>SLAVE</code> varchar(200) DEFAULT NULL, <code>DESCRIPTION</code> varchar(200) DEFAULT NULL, <code>GMT_CREATE</code> timestamp NOT NULL DEFAULT &#39;0000-00-00 00:00:00&#39;, <code>GMT_MODIFIED</code> timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (<code>ID</code>), KEY <code>GROUPKEY</code> (<code>GROUP_KEY</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8;</p><p>CREATE TABLE IF NOT EXISTS <code>meta_history</code> ( <code>id</code> bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;, <code>gmt_create</code> datetime NOT NULL COMMENT &#39;创建时间&#39;, <code>gmt_modified</code> datetime NOT NULL COMMENT &#39;修改时间&#39;, <code>destination</code> varchar(128) DEFAULT NULL COMMENT &#39;通道名称&#39;, <code>binlog_file</code> varchar(64) DEFAULT NULL COMMENT &#39;binlog文件名&#39;, <code>binlog_offest</code> bigint(20) DEFAULT NULL COMMENT &#39;binlog偏移量&#39;, <code>binlog_master_id</code> varchar(64) DEFAULT NULL COMMENT &#39;binlog节点id&#39;, <code>binlog_timestamp</code> bigint(20) DEFAULT NULL COMMENT &#39;binlog应用的时间戳&#39;, <code>use_schema</code> varchar(1024) DEFAULT NULL COMMENT &#39;执行sql时对应的schema&#39;, <code>sql_schema</code> varchar(1024) DEFAULT NULL COMMENT &#39;对应的schema&#39;, <code>sql_table</code> varchar(1024) DEFAULT NULL COMMENT &#39;对应的table&#39;, <code>sql_text</code> longtext DEFAULT NULL COMMENT &#39;执行的sql&#39;, <code>sql_type</code> varchar(256) DEFAULT NULL COMMENT &#39;sql类型&#39;, <code>extra</code> text DEFAULT NULL COMMENT &#39;额外的扩展信息&#39;, PRIMARY KEY (<code>id</code>), UNIQUE KEY binlog_file_offest(<code>destination</code>,<code>binlog_master_id</code>,<code>binlog_file</code>,<code>binlog_offest</code>), KEY <code>destination</code> (<code>destination</code>), KEY <code>destination_timestamp</code> (<code>destination</code>,<code>binlog_timestamp</code>), KEY <code>gmt_modified</code> (<code>gmt_modified</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT=&#39;表结构变化明细表&#39;;</p><p>CREATE TABLE IF NOT EXISTS <code>meta_snapshot</code> ( <code>id</code> bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT &#39;主键&#39;, <code>gmt_create</code> datetime NOT NULL COMMENT &#39;创建时间&#39;, <code>gmt_modified</code> datetime NOT NULL COMMENT &#39;修改时间&#39;, <code>destination</code> varchar(128) DEFAULT NULL COMMENT &#39;通道名称&#39;, <code>binlog_file</code> varchar(64) DEFAULT NULL COMMENT &#39;binlog文件名&#39;, <code>binlog_offest</code> bigint(20) DEFAULT NULL COMMENT &#39;binlog偏移量&#39;, <code>binlog_master_id</code> varchar(64) DEFAULT NULL COMMENT &#39;binlog节点id&#39;, <code>binlog_timestamp</code> bigint(20) DEFAULT NULL COMMENT &#39;binlog应用的时间戳&#39;, <code>data</code> longtext DEFAULT NULL COMMENT &#39;表结构数据&#39;, <code>extra</code> text DEFAULT NULL COMMENT &#39;额外的扩展信息&#39;, PRIMARY KEY (<code>id</code>), UNIQUE KEY binlog_file_offest(<code>destination</code>,<code>binlog_master_id</code>,<code>binlog_file</code>,<code>binlog_offest</code>), KEY <code>destination</code> (<code>destination</code>), KEY <code>destination_timestamp</code> (<code>destination</code>,<code>binlog_timestamp</code>), KEY <code>gmt_modified</code> (<code>gmt_modified</code>) ) ENGINE=InnoDB AUTO_INCREMENT=1 DEFAULT CHARSET=utf8 COMMENT=&#39;表结构记录表快照表&#39;;</p><p>insert into USER(ID,USERNAME,PASSWORD,AUTHORIZETYPE,DEPARTMENT,REALNAME,GMT_CREATE,GMT_MODIFIED) values(null,&#39;admin&#39;,&#39;801fc357a5a74743894a&#39;,&#39;ADMIN&#39;,&#39;admin&#39;,&#39;admin&#39;,now(),now()); insert into USER(ID,USERNAME,PASSWORD,AUTHORIZETYPE,DEPARTMENT,REALNAME,GMT_CREATE,GMT_MODIFIED) values(null,&#39;guest&#39;,&#39;471e02a154a2121dc577&#39;,&#39;OPERATOR&#39;,&#39;guest&#39;,&#39;guest&#39;,now(),now());</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span></span></span></code></pre></div></li></ul><h2 id="manager配置" tabindex="-1">manager配置 <a class="header-anchor" href="#manager配置" aria-label="Permalink to &quot;manager配置&quot;">​</a></h2><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>## otter manager domain name</span></span>
<span class="line"><span>otter.domainName = xxx.com</span></span>
<span class="line"><span>## otter manager http port</span></span>
<span class="line"><span>otter.port = </span></span>
<span class="line"><span></span></span>
<span class="line"><span>## otter manager database config</span></span>
<span class="line"><span>otter.database.driver.class.name = com.mysql.jdbc.Driver</span></span>
<span class="line"><span>otter.database.driver.url = jdbc:mysql://127.0.0.1:3306/otter?useUnicode=true&amp;characterEncoding=UTF-8&amp;useSSL=false</span></span>
<span class="line"><span>otter.database.driver.username = </span></span>
<span class="line"><span>otter.database.driver.password = </span></span>
<span class="line"><span></span></span>
<span class="line"><span>## otter communication port</span></span>
<span class="line"><span>otter.communication.manager.port = 1099</span></span>
<span class="line"><span>## default zookeeper address</span></span>
<span class="line"><span>otter.zookeeper.cluster.default = 127.0.0.1:2181</span></span></code></pre></div><p>修改完关键配置后即可执行bin/startup.sh启动manager服务，webUI访问时默认是游客，admin密码默认为<code>admin</code> ,otter没有提供权限控制，游客用户也能看到所有配置信息，因此不能暴露在公网。</p><blockquote><p>坑：startup.sh中的java启动参数-Xss（单个线程栈内存）值都设置的是256k,使用jdk1.8是无法启动的，需要调成大一点例如512k</p><p><code>The stack size specified is too small, Specify at least 384k</code></p></blockquote><p>切换到admin用户后需要配置zookeeper &amp; node信息，这个node的id为1</p><p><img src="https://storyxc.com/images/blog/image-20230228201401938.png" alt="image-20230228201401938"></p><h2 id="node配置" tabindex="-1">node配置 <a class="header-anchor" href="#node配置" aria-label="Permalink to &quot;node配置&quot;">​</a></h2><p>在node/conf下执行<code>echo 1 &gt; nid</code>，调整node配置后启动node，看到node状态为已启动即可</p><p><img src="https://storyxc.com/images/blog/image-20230228201429514.png" alt="image-20230228201429514"></p><h2 id="数据源配置" tabindex="-1">数据源配置 <a class="header-anchor" href="#数据源配置" aria-label="Permalink to &quot;数据源配置&quot;">​</a></h2><p>配置两个数据源，一个作为源库，一个作为目标库</p><h2 id="数据表配置" tabindex="-1">数据表配置 <a class="header-anchor" href="#数据表配置" aria-label="Permalink to &quot;数据表配置&quot;">​</a></h2><p>表明可以用模糊匹配，也可以指定具体的表</p><h2 id="canal配置" tabindex="-1">canal配置 <a class="header-anchor" href="#canal配置" aria-label="Permalink to &quot;canal配置&quot;">​</a></h2><p>监听源库，开启tsdb监控表结构变化</p><h2 id="配置channel" tabindex="-1">配置Channel <a class="header-anchor" href="#配置channel" aria-label="Permalink to &quot;配置Channel&quot;">​</a></h2><h3 id="添加channel" tabindex="-1">添加channel <a class="header-anchor" href="#添加channel" aria-label="Permalink to &quot;添加channel&quot;">​</a></h3><p>基于日志变更、行记录模式</p><h3 id="添加pipeline" tabindex="-1">添加pipeline <a class="header-anchor" href="#添加pipeline" aria-label="Permalink to &quot;添加pipeline&quot;">​</a></h3><p>select和load机器直接选node，同步数据来源的canal选择刚才配置的</p><h3 id="配置映射关系列表" tabindex="-1">配置映射关系列表 <a class="header-anchor" href="#配置映射关系列表" aria-label="Permalink to &quot;配置映射关系列表&quot;">​</a></h3><p>添加源表和目标表的映射，视图模式的include/exclude分别代表选中的字段同步/选中的字段排除（不同步），配置好映射关系后保存</p><blockquote><p>批量添加</p><p>schema1,table1,sourceId1,schema2,table2,sourceId2</p><p>schema1,table1,sourceId1为源表信息</p><p>schema2,table2,sourceId2为目标表信息</p><p>sourceId是数据源的id，在数据源配置页面可以找到</p><p>映射权重 (对应的数字越大，同步会越后面得到同步，优先同步权重小的数据)</p></blockquote><h2 id="启动channel" tabindex="-1">启动channel <a class="header-anchor" href="#启动channel" aria-label="Permalink to &quot;启动channel&quot;">​</a></h2><p>启动channel即可测试源库源表的数据变更后，目标库的目标表是否跟着一起更新。</p><h2 id="全量数据同步" tabindex="-1">全量数据同步 <a class="header-anchor" href="#全量数据同步" aria-label="Permalink to &quot;全量数据同步&quot;">​</a></h2><h3 id="方案1" tabindex="-1">方案1 <a class="header-anchor" href="#方案1" aria-label="Permalink to &quot;方案1&quot;">​</a></h3><p>上述介绍的是增量同步数据的基本操作，但是往往源表中已经有了大量的存量数据需要全量同步一次。</p><p>Otter官方提供了一种叫<code>自由门</code>的方案可以用于：</p><ul><li>数据订正</li><li>全量数据同步</li></ul><p>原理是基于otter系统表retl_buffer，插入特定数据，otter系统感知后回根据表明和pk提取对应记录和正常增量同步数据一起同步到目标库</p><h4 id="前提" tabindex="-1">前提 <a class="header-anchor" href="#前提" aria-label="Permalink to &quot;前提&quot;">​</a></h4><ul><li>已经建好了两个表的同步channel并且启动</li></ul><h4 id="retl库建表sql" tabindex="-1">retl库建表sql <a class="header-anchor" href="#retl库建表sql" aria-label="Permalink to &quot;retl库建表sql&quot;">​</a></h4><div class="language-sql vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/*</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">供 otter 使用， otter 需要对 retl.* 的读写权限，以及对业务表的读写权限</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">1. 创建database retl</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DATABASE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> retl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 2. 用户授权 给同步用户授权 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> USER</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> retl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> IDENTIFIED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;retl&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> USAGE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`retl\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, REPLICATION SLAVE, REPLICATION CLIENT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`retl\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXECUTE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`retl\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`retl\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 业务表授权，这里可以限定只授权同步业务的表 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GRANT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> SELECT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DELETE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> ON</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TO</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`retl\`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;%&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;  </span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 3. 创建系统表 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">USE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> retl;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> retl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">retl_buffer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> retl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">retl_mark</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DROP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> IF</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> EXISTS</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> retl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xdual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> retl_buffer</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	TABLE_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	FULL_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">512</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	TYPE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> CHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	PK_DATA </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VARCHAR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">256</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	GMT_CREATE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TIMESTAMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	GMT_MODIFIED </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">TIMESTAMP</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RETL_BUFFER_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ID) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)  ENGINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InnoDB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> retl_mark</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(	</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	CHANNEL_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	CHANNEL_INFO </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">varchar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">128</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	CONSTRAINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> RETL_MARK_ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ID) </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InnoDB AUTO_INCREMENT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CREATE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> TABLE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> xdual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ID </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">BIGINT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">NOT NULL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> AUTO_INCREMENT,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  X </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">timestamp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> NOT NULL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CURRENT_TIMESTAMP,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  PRIMARY KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (ID)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) ENGINE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">InnoDB AUTO_INCREMENT</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> DEFAULT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> CHARSET</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">utf8;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 4. 插入初始化数据 */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">INSERT INTO</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> retl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">xdual</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id, x) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VALUES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DUPLICATE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">KEY</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> UPDATE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> x </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> now</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><h4 id="全量同步操作" tabindex="-1">全量同步操作 <a class="header-anchor" href="#全量同步操作" aria-label="Permalink to &quot;全量同步操作&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>insert into retl.retl_buffer(ID,TABLE_ID, FULL_NAME,TYPE,PK_DATA,GMT_CREATE,GMT_MODIFIED) (select null,0,&#39;$schema.table$&#39;,&#39;I&#39;,id,now(),now() from $schema.table$);</span></span></code></pre></div><blockquote><p>例如：insert into retl.retl_buffer(ID,TABLE_ID, FULL_NAME,TYPE,PK_DATA,GMT_CREATE,GMT_MODIFIED) (select null,0,&#39;test.user&#39;,&#39;I&#39;,id,now(),now() from test.user);</p></blockquote><h3 id="方案2" tabindex="-1">方案2 <a class="header-anchor" href="#方案2" aria-label="Permalink to &quot;方案2&quot;">​</a></h3><p>上述基于数据库插入记录触发otter同步的方案，如果数据量大会比较耗时。也可以直接把源表数据导出并记录导出时binlog的position，先将全量数据导入一次目标表，再基于导出数据时的binlog的position进行增量同步。</p><h4 id="导出数据" tabindex="-1">导出数据 <a class="header-anchor" href="#导出数据" aria-label="Permalink to &quot;导出数据&quot;">​</a></h4><p><code>mysqldump -uxxx -pxxx --single-transaction --master-data=2 --databases xxx --tables xxx &gt; data.sql</code></p><p>这样，导出的data.sql文件中会有一行信息，记录导出时的binlog文件和position</p><p><img src="https://storyxc.com/images/blog/image-20230228203126413.png" alt="image-20230228203126413"></p><h4 id="导入数据" tabindex="-1">导入数据 <a class="header-anchor" href="#导入数据" aria-label="Permalink to &quot;导入数据&quot;">​</a></h4><p>在目标库执行导入sql</p><h4 id="配置canal的读取postion" tabindex="-1">配置canal的读取postion <a class="header-anchor" href="#配置canal的读取postion" aria-label="Permalink to &quot;配置canal的读取postion&quot;">​</a></h4><p><img src="https://storyxc.com/images/blog/image-20230228203443257.png" alt="image-20230228203443257"></p><p>后续新建channel的操作和普通增量同步一样即可。</p><h2 id="踩坑" tabindex="-1">踩坑 <a class="header-anchor" href="#踩坑" aria-label="Permalink to &quot;踩坑&quot;">​</a></h2><h3 id="更换zookeeper后manager-webui无法访问" tabindex="-1">更换zookeeper后manager webui无法访问 <a class="header-anchor" href="#更换zookeeper后manager-webui无法访问" aria-label="Permalink to &quot;更换zookeeper后manager webui无法访问&quot;">​</a></h3><p>更换zookeeper后，manager管理页面无法进入，报错内容类似<code>org.I0Itec.zkclient.exception.ZkNoNodeException: org.apache.zookeeper.KeeperException$NoNodeException: KeeperErrorCode = NoNode for /otter/channel/3/3/process</code> 。原因是otter会在zookepper中存储一些节点信息，更换zookeeper后，需要复制节点数据，或者删除数据库中的channel、pipeline等表的数据内容 或者访问 <code>http://域名:端口/system_reduction.htm</code>，点击一键修复即可。</p><h3 id="canal指定的binlog被清除" tabindex="-1">canal指定的binlog被清除 <a class="header-anchor" href="#canal指定的binlog被清除" aria-label="Permalink to &quot;canal指定的binlog被清除&quot;">​</a></h3><p><code>show master logs</code><code>show binlog events in &#39;binlog.000048&#39; from 1226 limit 4;</code> 更新canal中的位点配置重新启动</p><h3 id="读取从库binlog" tabindex="-1">读取从库binlog <a class="header-anchor" href="#读取从库binlog" aria-label="Permalink to &quot;读取从库binlog&quot;">​</a></h3><ul><li></li></ul><p>低权限用户需要授权，否则无法读取binlog<code>GRANT SELECT, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO &#39;xxx&#39;@&#39;%&#39; IDENTIFIED BY &#39;&#39;;</code></p><ul><li>从库需要设置<code>log_slave_updates=1</code>，将主库binlog中的操作写入到从库的binlog中，默认是关闭的，虽然数据可以同步，但是从库binlog没有记录这些内容。</li></ul>`,63)]))}const k=s(n,[["render",t]]);export{T as __pageData,k as default};
