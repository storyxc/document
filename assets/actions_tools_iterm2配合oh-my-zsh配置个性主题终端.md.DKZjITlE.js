import{_ as s,c as e,o as i,a2 as t}from"./chunks/framework.CQECOx-R.js";const m=JSON.parse('{"title":"iterm2配合oh-my-zsh配置个性主题终端","description":"","frontmatter":{},"headers":[],"relativePath":"actions/tools/iterm2配合oh-my-zsh配置个性主题终端.md","filePath":"actions/tools/iterm2配合oh-my-zsh配置个性主题终端.md","lastUpdated":1746516944000}'),h={name:"actions/tools/iterm2配合oh-my-zsh配置个性主题终端.md"};function l(r,a,o,n,p,c){return i(),e("div",null,a[0]||(a[0]=[t(`<h1 id="iterm2配合oh-my-zsh配置个性主题终端" tabindex="-1">iterm2配合oh-my-zsh配置个性主题终端 <a class="header-anchor" href="#iterm2配合oh-my-zsh配置个性主题终端" aria-label="Permalink to &quot;iterm2配合oh-my-zsh配置个性主题终端&quot;">​</a></h1><h2 id="安装iterm2" tabindex="-1">安装iterm2 <a class="header-anchor" href="#安装iterm2" aria-label="Permalink to &quot;安装iterm2&quot;">​</a></h2><p>官网下载：<a href="https://iterm2.com/" target="_blank" rel="noreferrer">https://iterm2.com/</a></p><h2 id="安装oh-my-zsh" tabindex="-1">安装oh my zsh <a class="header-anchor" href="#安装oh-my-zsh" aria-label="Permalink to &quot;安装oh my zsh&quot;">​</a></h2><p>官网：<a href="https://ohmyz.sh/" target="_blank" rel="noreferrer">https://ohmyz.sh/</a></p><p>安装脚本：<code>sh -c &quot;$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</code></p><p>因为网络原因无法执行这个脚本的可以找gitee上的国内源</p><h2 id="更改iterm2的主题颜色为dracula" tabindex="-1">更改iterm2的主题颜色为dracula <a class="header-anchor" href="#更改iterm2的主题颜色为dracula" aria-label="Permalink to &quot;更改iterm2的主题颜色为dracula&quot;">​</a></h2><h3 id="在iterm2的dracula主题仓库中下载color文件" tabindex="-1">在iterm2的dracula主题仓库中下载color文件 <a class="header-anchor" href="#在iterm2的dracula主题仓库中下载color文件" aria-label="Permalink to &quot;在iterm2的dracula主题仓库中下载color文件&quot;">​</a></h3><p>仓库地址：<code> https://github.com/dracula/iterm.git</code></p><p><img src="https://storyxc.com/images/blog//image-20211119150619779.png" alt="image-20211119150619779"></p><h3 id="打开iterm2导入刚下载的color文件" tabindex="-1">打开iterm2导入刚下载的color文件 <a class="header-anchor" href="#打开iterm2导入刚下载的color文件" aria-label="Permalink to &quot;打开iterm2导入刚下载的color文件&quot;">​</a></h3><p><img src="https://storyxc.com/images/blog//image-20211119150804269.png" alt="image-20211119150804269"></p><p>如图，导入完之后就可以选择导入的dracula主题颜色</p><h2 id="安装命令高亮插件" tabindex="-1">安装命令高亮插件 <a class="header-anchor" href="#安装命令高亮插件" aria-label="Permalink to &quot;安装命令高亮插件&quot;">​</a></h2><h3 id="clone代码到本地" tabindex="-1">clone代码到本地 <a class="header-anchor" href="#clone代码到本地" aria-label="Permalink to &quot;clone代码到本地&quot;">​</a></h3><p><code>git clone https://github.com/zsh-users/zsh-syntax-highlighting $ZSH_CUSTOM/plugins/zsh-syntax-highlighting</code></p><h2 id="安装历史指令提示插件" tabindex="-1">安装历史指令提示插件 <a class="header-anchor" href="#安装历史指令提示插件" aria-label="Permalink to &quot;安装历史指令提示插件&quot;">​</a></h2><h3 id="clone代码到本地-1" tabindex="-1">clone代码到本地 <a class="header-anchor" href="#clone代码到本地-1" aria-label="Permalink to &quot;clone代码到本地&quot;">​</a></h3><p><code>git clone https://github.com/zsh-users/zsh-autosuggestions $ZSH_CUSTOM/plugins/zsh-autosuggestions</code></p><h2 id="修改-zshrc配置" tabindex="-1">修改.zshrc配置 <a class="header-anchor" href="#修改-zshrc配置" aria-label="Permalink to &quot;修改.zshrc配置&quot;">​</a></h2><ul><li><s><code>source ~/.zsh/zsh-autosuggestions/zsh-autosuggestions.zsh</code></s></li><li><s><code>source ~/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh</code></s></li></ul><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># ~/.zshrc</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">plugins</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  git</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  zsh-autosuggestions</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  zsh-syntax-highlighting</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><h3 id="效果" tabindex="-1">效果 <a class="header-anchor" href="#效果" aria-label="Permalink to &quot;效果&quot;">​</a></h3><p><img src="https://storyxc.com/images/blog//image-20211119151720033.png" alt="image-20211119151720033"></p><h2 id="powerlevel10k主题" tabindex="-1">powerlevel10k主题 <a class="header-anchor" href="#powerlevel10k主题" aria-label="Permalink to &quot;powerlevel10k主题&quot;">​</a></h2><blockquote><p><a href="https://github.com/romkatv/powerlevel10k" target="_blank" rel="noreferrer">https://github.com/romkatv/powerlevel10k</a></p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --depth=1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/romkatv/powerlevel10k.git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/powerlevel10k</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;source ~/powerlevel10k/powerlevel10k.zsh-theme&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">~/.zshrc</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p10k</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configure</span></span></code></pre></div>`,28)]))}const g=s(h,[["render",l]]);export{m as __pageData,g as default};
